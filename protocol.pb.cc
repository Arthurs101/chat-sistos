// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto
// Protobuf C++ Version: 5.26.0

#include "protocol.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chat {

inline constexpr UserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UserRequest::UserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRequestDefaultTypeInternal _UserRequest_default_instance_;

inline constexpr UserRegistration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UserRegistration::UserRegistration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserRegistrationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRegistrationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRegistrationDefaultTypeInternal() {}
  union {
    UserRegistration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRegistrationDefaultTypeInternal _UserRegistration_default_instance_;

inline constexpr UserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UserInfo::UserInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfoDefaultTypeInternal() {}
  union {
    UserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfoDefaultTypeInternal _UserInfo_default_instance_;

inline constexpr MessageCommunication::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MessageCommunication::MessageCommunication(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageCommunicationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageCommunicationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageCommunicationDefaultTypeInternal() {}
  union {
    MessageCommunication _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageCommunicationDefaultTypeInternal _MessageCommunication_default_instance_;

inline constexpr ChangeStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ChangeStatus::ChangeStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChangeStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeStatusDefaultTypeInternal() {}
  union {
    ChangeStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeStatusDefaultTypeInternal _ChangeStatus_default_instance_;

inline constexpr ConnectedUsersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connectedusers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectedUsersResponse::ConnectedUsersResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConnectedUsersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectedUsersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectedUsersResponseDefaultTypeInternal() {}
  union {
    ConnectedUsersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectedUsersResponseDefaultTypeInternal _ConnectedUsersResponse_default_instance_;

inline constexpr ClientPetition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        registration_{nullptr},
        users_{nullptr},
        change_{nullptr},
        messagecommunication_{nullptr},
        option_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientPetition::ClientPetition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientPetitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientPetitionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientPetitionDefaultTypeInternal() {}
  union {
    ClientPetition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientPetitionDefaultTypeInternal _ClientPetition_default_instance_;

inline constexpr ServerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        servermessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connectedusers_{nullptr},
        messagecommunication_{nullptr},
        userinforesponse_{nullptr},
        change_{nullptr},
        option_{0},
        code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerResponse::ServerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerResponseDefaultTypeInternal() {}
  union {
    ServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;
}  // namespace chat
static ::_pb::Metadata file_level_metadata_protocol_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_protocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::chat::UserRegistration, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::UserRegistration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserRegistration, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::UserRegistration, _impl_.ip_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chat::UserInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::UserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserInfo, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::UserInfo, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::chat::UserInfo, _impl_.ip_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::chat::UserRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::UserRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserRequest, _impl_.user_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::ConnectedUsersResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::ConnectedUsersResponse, _impl_.connectedusers_),
        PROTOBUF_FIELD_OFFSET(::chat::ChangeStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::ChangeStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::ChangeStatus, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::ChangeStatus, _impl_.status_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chat::MessageCommunication, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageCommunication, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::MessageCommunication, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageCommunication, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::chat::MessageCommunication, _impl_.sender_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_.registration_),
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_.users_),
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::chat::ClientPetition, _impl_.messagecommunication_),
        4,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.servermessage_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.connectedusers_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.messagecommunication_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.userinforesponse_),
        PROTOBUF_FIELD_OFFSET(::chat::ServerResponse, _impl_.change_),
        5,
        6,
        0,
        1,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::chat::UserRegistration)},
        {12, 23, -1, sizeof(::chat::UserInfo)},
        {26, 35, -1, sizeof(::chat::UserRequest)},
        {36, -1, -1, sizeof(::chat::ConnectedUsersResponse)},
        {45, 55, -1, sizeof(::chat::ChangeStatus)},
        {57, 68, -1, sizeof(::chat::MessageCommunication)},
        {71, 84, -1, sizeof(::chat::ClientPetition)},
        {89, 104, -1, sizeof(::chat::ServerResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::chat::_UserRegistration_default_instance_._instance,
    &::chat::_UserInfo_default_instance_._instance,
    &::chat::_UserRequest_default_instance_._instance,
    &::chat::_ConnectedUsersResponse_default_instance_._instance,
    &::chat::_ChangeStatus_default_instance_._instance,
    &::chat::_MessageCommunication_default_instance_._instance,
    &::chat::_ClientPetition_default_instance_._instance,
    &::chat::_ServerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_protocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016protocol.proto\022\004chat\"N\n\020UserRegistrati"
    "on\022\025\n\010username\030\001 \001(\tH\000\210\001\001\022\017\n\002ip\030\002 \001(\tH\001\210"
    "\001\001B\013\n\t_usernameB\005\n\003_ip\"f\n\010UserInfo\022\025\n\010us"
    "ername\030\001 \001(\tH\000\210\001\001\022\023\n\006status\030\002 \001(\tH\001\210\001\001\022\017"
    "\n\002ip\030\003 \001(\tH\002\210\001\001B\013\n\t_usernameB\t\n\007_statusB"
    "\005\n\003_ip\")\n\013UserRequest\022\021\n\004user\030\001 \001(\tH\000\210\001\001"
    "B\007\n\005_user\"@\n\026ConnectedUsersResponse\022&\n\016c"
    "onnectedUsers\030\001 \003(\0132\016.chat.UserInfo\"R\n\014C"
    "hangeStatus\022\025\n\010username\030\001 \001(\tH\000\210\001\001\022\023\n\006st"
    "atus\030\002 \001(\tH\001\210\001\001B\013\n\t_usernameB\t\n\007_status\""
    "~\n\024MessageCommunication\022\024\n\007message\030\001 \001(\t"
    "H\000\210\001\001\022\026\n\trecipient\030\002 \001(\tH\001\210\001\001\022\023\n\006sender\030"
    "\003 \001(\tH\002\210\001\001B\n\n\010_messageB\014\n\n_recipientB\t\n\007"
    "_sender\"\261\002\n\016ClientPetition\022\023\n\006option\030\001 \001"
    "(\005H\000\210\001\001\0221\n\014registration\030\002 \001(\0132\026.chat.Use"
    "rRegistrationH\001\210\001\001\022%\n\005users\030\003 \001(\0132\021.chat"
    ".UserRequestH\002\210\001\001\022\'\n\006change\030\004 \001(\0132\022.chat"
    ".ChangeStatusH\003\210\001\001\022=\n\024messageCommunicati"
    "on\030\005 \001(\0132\032.chat.MessageCommunicationH\004\210\001"
    "\001B\t\n\007_optionB\017\n\r_registrationB\010\n\006_usersB"
    "\t\n\007_changeB\027\n\025_messageCommunication\"\230\003\n\016"
    "ServerResponse\022\023\n\006option\030\001 \001(\005H\000\210\001\001\022\021\n\004c"
    "ode\030\002 \001(\005H\001\210\001\001\022\032\n\rserverMessage\030\003 \001(\tH\002\210"
    "\001\001\0229\n\016connectedUsers\030\004 \001(\0132\034.chat.Connec"
    "tedUsersResponseH\003\210\001\001\022=\n\024messageCommunic"
    "ation\030\005 \001(\0132\032.chat.MessageCommunicationH"
    "\004\210\001\001\022-\n\020userInfoResponse\030\006 \001(\0132\016.chat.Us"
    "erInfoH\005\210\001\001\022\'\n\006change\030\007 \001(\0132\022.chat.Chang"
    "eStatusH\006\210\001\001B\t\n\007_optionB\007\n\005_codeB\020\n\016_ser"
    "verMessageB\021\n\017_connectedUsersB\027\n\025_messag"
    "eCommunicationB\023\n\021_userInfoResponseB\t\n\007_"
    "changeb\006proto3"
};
static ::absl::once_flag descriptor_table_protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protocol_2eproto = {
    false,
    false,
    1254,
    descriptor_table_protodef_protocol_2eproto,
    "protocol.proto",
    &descriptor_table_protocol_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_protocol_2eproto::offsets,
    file_level_metadata_protocol_2eproto,
    file_level_enum_descriptors_protocol_2eproto,
    file_level_service_descriptors_protocol_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protocol_2eproto_getter() {
  return &descriptor_table_protocol_2eproto;
}
namespace chat {
// ===================================================================

class UserRegistration::_Internal {
 public:
  using HasBits = decltype(std::declval<UserRegistration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_._has_bits_);
};

UserRegistration::UserRegistration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserRegistration)
}
inline PROTOBUF_NDEBUG_INLINE UserRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        ip_(arena, from.ip_) {}

UserRegistration::UserRegistration(
    ::google::protobuf::Arena* arena,
    const UserRegistration& from)
    : ::google::protobuf::Message(arena) {
  UserRegistration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.UserRegistration)
}
inline PROTOBUF_NDEBUG_INLINE UserRegistration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        ip_(arena) {}

inline void UserRegistration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserRegistration::~UserRegistration() {
  // @@protoc_insertion_point(destructor:chat.UserRegistration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserRegistration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserRegistration::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_._cached_size_),
              false,
          },
          &UserRegistration::MergeImpl,
          &UserRegistration::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserRegistration::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserRegistration)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.ip_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserRegistration::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> UserRegistration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserRegistration_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserRegistration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.ip_)}},
    // optional string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string username = 1;
    {PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string ip = 2;
    {PROTOBUF_FIELD_OFFSET(UserRegistration, _impl_.ip_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\10\2\0\0\0\0\0"
    "chat.UserRegistration"
    "username"
    "ip"
  }},
};

::uint8_t* UserRegistration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UserRegistration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string username = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserRegistration.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserRegistration.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UserRegistration)
  return target;
}

::size_t UserRegistration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UserRegistration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string username = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // optional string ip = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ip());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserRegistration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserRegistration*>(&to_msg);
  auto& from = static_cast<const UserRegistration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserRegistration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_ip(from._internal_ip());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRegistration::CopyFrom(const UserRegistration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserRegistration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserRegistration::IsInitialized() const {
  return true;
}

void UserRegistration::InternalSwap(UserRegistration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
}

::google::protobuf::Metadata UserRegistration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[0]);
}
// ===================================================================

class UserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<UserInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._has_bits_);
};

UserInfo::UserInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        status_(arena, from.status_),
        ip_(arena, from.ip_) {}

UserInfo::UserInfo(
    ::google::protobuf::Arena* arena,
    const UserInfo& from)
    : ::google::protobuf::Message(arena) {
  UserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        status_(arena),
        ip_(arena) {}

inline void UserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:chat.UserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.status_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._cached_size_),
              false,
          },
          &UserInfo::MergeImpl,
          &UserInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.status_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.ip_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> UserInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.username_)}},
    // optional string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.status_)}},
    // optional string ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string username = 1;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string status = 2;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string ip = 3;
    {PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.ip_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\10\6\2\0\0\0\0"
    "chat.UserInfo"
    "username"
    "status"
    "ip"
  }},
};

::uint8_t* UserInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UserInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string username = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserInfo.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string status = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserInfo.status");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string ip = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserInfo.ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UserInfo)
  return target;
}

::size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UserInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string username = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // optional string status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_status());
    }

    // optional string ip = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ip());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserInfo*>(&to_msg);
  auto& from = static_cast<const UserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_status(from._internal_status());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_ip(from._internal_ip());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::InternalSwap(UserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[1]);
}
// ===================================================================

class UserRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UserRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserRequest, _impl_._has_bits_);
};

UserRequest::UserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_(arena, from.user_) {}

UserRequest::UserRequest(
    ::google::protobuf::Arena* arena,
    const UserRequest& from)
    : ::google::protobuf::Message(arena) {
  UserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.UserRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_(arena) {}

inline void UserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:chat.UserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserRequest, _impl_._cached_size_),
              false,
          },
          &UserRequest::MergeImpl,
          &UserRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.user_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 29, 2> UserRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string user = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string user = 1;
    {PROTOBUF_FIELD_OFFSET(UserRequest, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\4\0\0\0\0\0\0"
    "chat.UserRequest"
    "user"
  }},
};

::uint8_t* UserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string user = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserRequest.user");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UserRequest)
  return target;
}

::size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string user = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserRequest*>(&to_msg);
  auto& from = static_cast<const UserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_user(from._internal_user());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::InternalSwap(UserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[2]);
}
// ===================================================================

class ConnectedUsersResponse::_Internal {
 public:
};

ConnectedUsersResponse::ConnectedUsersResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.ConnectedUsersResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectedUsersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : connectedusers_{visibility, arena, from.connectedusers_},
        _cached_size_{0} {}

ConnectedUsersResponse::ConnectedUsersResponse(
    ::google::protobuf::Arena* arena,
    const ConnectedUsersResponse& from)
    : ::google::protobuf::Message(arena) {
  ConnectedUsersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.ConnectedUsersResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConnectedUsersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : connectedusers_{visibility, arena},
        _cached_size_{0} {}

inline void ConnectedUsersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConnectedUsersResponse::~ConnectedUsersResponse() {
  // @@protoc_insertion_point(destructor:chat.ConnectedUsersResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConnectedUsersResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ConnectedUsersResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ConnectedUsersResponse, _impl_._cached_size_),
              false,
          },
          &ConnectedUsersResponse::MergeImpl,
          &ConnectedUsersResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ConnectedUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ConnectedUsersResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connectedusers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConnectedUsersResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ConnectedUsersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ConnectedUsersResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::ConnectedUsersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .chat.UserInfo connectedUsers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectedUsersResponse, _impl_.connectedusers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chat.UserInfo connectedUsers = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectedUsersResponse, _impl_.connectedusers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::UserInfo>()},
  }}, {{
  }},
};

::uint8_t* ConnectedUsersResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.ConnectedUsersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .chat.UserInfo connectedUsers = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_connectedusers_size());
       i < n; i++) {
    const auto& repfield = this->_internal_connectedusers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ConnectedUsersResponse)
  return target;
}

::size_t ConnectedUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ConnectedUsersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .chat.UserInfo connectedUsers = 1;
  total_size += 1UL * this->_internal_connectedusers_size();
  for (const auto& msg : this->_internal_connectedusers()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ConnectedUsersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectedUsersResponse*>(&to_msg);
  auto& from = static_cast<const ConnectedUsersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.ConnectedUsersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connectedusers()->MergeFrom(
      from._internal_connectedusers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectedUsersResponse::CopyFrom(const ConnectedUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ConnectedUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConnectedUsersResponse::IsInitialized() const {
  return true;
}

void ConnectedUsersResponse::InternalSwap(ConnectedUsersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.connectedusers_.InternalSwap(&other->_impl_.connectedusers_);
}

::google::protobuf::Metadata ConnectedUsersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[3]);
}
// ===================================================================

class ChangeStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ChangeStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_._has_bits_);
};

ChangeStatus::ChangeStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.ChangeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ChangeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        status_(arena, from.status_) {}

ChangeStatus::ChangeStatus(
    ::google::protobuf::Arena* arena,
    const ChangeStatus& from)
    : ::google::protobuf::Message(arena) {
  ChangeStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.ChangeStatus)
}
inline PROTOBUF_NDEBUG_INLINE ChangeStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        status_(arena) {}

inline void ChangeStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChangeStatus::~ChangeStatus() {
  // @@protoc_insertion_point(destructor:chat.ChangeStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangeStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.status_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ChangeStatus::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_._cached_size_),
              false,
          },
          &ChangeStatus::MergeImpl,
          &ChangeStatus::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ChangeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ChangeStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.status_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChangeStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> ChangeStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChangeStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::ChangeStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string status = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_.status_)}},
    // optional string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string username = 1;
    {PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string status = 2;
    {PROTOBUF_FIELD_OFFSET(ChangeStatus, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\10\6\0\0\0\0\0"
    "chat.ChangeStatus"
    "username"
    "status"
  }},
};

::uint8_t* ChangeStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.ChangeStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string username = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ChangeStatus.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string status = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ChangeStatus.status");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ChangeStatus)
  return target;
}

::size_t ChangeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ChangeStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string username = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // optional string status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ChangeStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangeStatus*>(&to_msg);
  auto& from = static_cast<const ChangeStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.ChangeStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_status(from._internal_status());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeStatus::CopyFrom(const ChangeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ChangeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChangeStatus::IsInitialized() const {
  return true;
}

void ChangeStatus::InternalSwap(ChangeStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
}

::google::protobuf::Metadata ChangeStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[4]);
}
// ===================================================================

class MessageCommunication::_Internal {
 public:
  using HasBits = decltype(std::declval<MessageCommunication>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_._has_bits_);
};

MessageCommunication::MessageCommunication(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.MessageCommunication)
}
inline PROTOBUF_NDEBUG_INLINE MessageCommunication::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_),
        recipient_(arena, from.recipient_),
        sender_(arena, from.sender_) {}

MessageCommunication::MessageCommunication(
    ::google::protobuf::Arena* arena,
    const MessageCommunication& from)
    : ::google::protobuf::Message(arena) {
  MessageCommunication* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.MessageCommunication)
}
inline PROTOBUF_NDEBUG_INLINE MessageCommunication::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_(arena),
        recipient_(arena),
        sender_(arena) {}

inline void MessageCommunication::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MessageCommunication::~MessageCommunication() {
  // @@protoc_insertion_point(destructor:chat.MessageCommunication)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageCommunication::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.recipient_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MessageCommunication::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_._cached_size_),
              false,
          },
          &MessageCommunication::MergeImpl,
          &MessageCommunication::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void MessageCommunication::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MessageCommunication)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.recipient_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.sender_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MessageCommunication::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> MessageCommunication::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MessageCommunication_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::MessageCommunication>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.message_)}},
    // optional string recipient = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.recipient_)}},
    // optional string sender = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.sender_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string message = 1;
    {PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string recipient = 2;
    {PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.recipient_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string sender = 3;
    {PROTOBUF_FIELD_OFFSET(MessageCommunication, _impl_.sender_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\11\6\0\0\0\0"
    "chat.MessageCommunication"
    "message"
    "recipient"
    "sender"
  }},
};

::uint8_t* MessageCommunication::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.MessageCommunication)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageCommunication.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string recipient = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_recipient();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageCommunication.recipient");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string sender = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.MessageCommunication.sender");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.MessageCommunication)
  return target;
}

::size_t MessageCommunication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.MessageCommunication)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string message = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_message());
    }

    // optional string recipient = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_recipient());
    }

    // optional string sender = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sender());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MessageCommunication::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageCommunication*>(&to_msg);
  auto& from = static_cast<const MessageCommunication&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.MessageCommunication)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_recipient(from._internal_recipient());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_sender(from._internal_sender());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageCommunication::CopyFrom(const MessageCommunication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MessageCommunication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MessageCommunication::IsInitialized() const {
  return true;
}

void MessageCommunication::InternalSwap(MessageCommunication* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
}

::google::protobuf::Metadata MessageCommunication::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[5]);
}
// ===================================================================

class ClientPetition::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientPetition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_._has_bits_);
};

ClientPetition::ClientPetition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.ClientPetition)
}
inline PROTOBUF_NDEBUG_INLINE ClientPetition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClientPetition::ClientPetition(
    ::google::protobuf::Arena* arena,
    const ClientPetition& from)
    : ::google::protobuf::Message(arena) {
  ClientPetition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.registration_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::chat::UserRegistration>(
                              arena, *from._impl_.registration_)
                        : nullptr;
  _impl_.users_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::chat::UserRequest>(
                              arena, *from._impl_.users_)
                        : nullptr;
  _impl_.change_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::chat::ChangeStatus>(
                              arena, *from._impl_.change_)
                        : nullptr;
  _impl_.messagecommunication_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::chat::MessageCommunication>(
                              arena, *from._impl_.messagecommunication_)
                        : nullptr;
  _impl_.option_ = from._impl_.option_;

  // @@protoc_insertion_point(copy_constructor:chat.ClientPetition)
}
inline PROTOBUF_NDEBUG_INLINE ClientPetition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientPetition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, registration_),
           0,
           offsetof(Impl_, option_) -
               offsetof(Impl_, registration_) +
               sizeof(Impl_::option_));
}
ClientPetition::~ClientPetition() {
  // @@protoc_insertion_point(destructor:chat.ClientPetition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientPetition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.registration_;
  delete _impl_.users_;
  delete _impl_.change_;
  delete _impl_.messagecommunication_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ClientPetition::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_._cached_size_),
              false,
          },
          &ClientPetition::MergeImpl,
          &ClientPetition::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ClientPetition::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ClientPetition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.registration_ != nullptr);
      _impl_.registration_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.users_ != nullptr);
      _impl_.users_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.change_ != nullptr);
      _impl_.change_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.messagecommunication_ != nullptr);
      _impl_.messagecommunication_->Clear();
    }
  }
  _impl_.option_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientPetition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> ClientPetition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientPetition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::ClientPetition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 option = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClientPetition, _impl_.option_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.option_)}},
    // optional .chat.UserRegistration registration = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.registration_)}},
    // optional .chat.UserRequest users = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.users_)}},
    // optional .chat.ChangeStatus change = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.change_)}},
    // optional .chat.MessageCommunication messageCommunication = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.messagecommunication_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 option = 1;
    {PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.option_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .chat.UserRegistration registration = 2;
    {PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.registration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.UserRequest users = 3;
    {PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.users_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.ChangeStatus change = 4;
    {PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.change_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.MessageCommunication messageCommunication = 5;
    {PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.messagecommunication_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::UserRegistration>()},
    {::_pbi::TcParser::GetTable<::chat::UserRequest>()},
    {::_pbi::TcParser::GetTable<::chat::ChangeStatus>()},
    {::_pbi::TcParser::GetTable<::chat::MessageCommunication>()},
  }}, {{
  }},
};

::uint8_t* ClientPetition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.ClientPetition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 option = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_option(), target);
  }

  // optional .chat.UserRegistration registration = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.registration_, _impl_.registration_->GetCachedSize(), target, stream);
  }

  // optional .chat.UserRequest users = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.users_, _impl_.users_->GetCachedSize(), target, stream);
  }

  // optional .chat.ChangeStatus change = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.change_, _impl_.change_->GetCachedSize(), target, stream);
  }

  // optional .chat.MessageCommunication messageCommunication = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.messagecommunication_, _impl_.messagecommunication_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ClientPetition)
  return target;
}

::size_t ClientPetition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ClientPetition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .chat.UserRegistration registration = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.registration_);
    }

    // optional .chat.UserRequest users = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.users_);
    }

    // optional .chat.ChangeStatus change = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.change_);
    }

    // optional .chat.MessageCommunication messageCommunication = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.messagecommunication_);
    }

    // optional int32 option = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_option());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ClientPetition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientPetition*>(&to_msg);
  auto& from = static_cast<const ClientPetition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.ClientPetition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.registration_ != nullptr);
      if (_this->_impl_.registration_ == nullptr) {
        _this->_impl_.registration_ =
            ::google::protobuf::Message::CopyConstruct<::chat::UserRegistration>(arena, *from._impl_.registration_);
      } else {
        _this->_impl_.registration_->MergeFrom(*from._impl_.registration_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.users_ != nullptr);
      if (_this->_impl_.users_ == nullptr) {
        _this->_impl_.users_ =
            ::google::protobuf::Message::CopyConstruct<::chat::UserRequest>(arena, *from._impl_.users_);
      } else {
        _this->_impl_.users_->MergeFrom(*from._impl_.users_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.change_ != nullptr);
      if (_this->_impl_.change_ == nullptr) {
        _this->_impl_.change_ =
            ::google::protobuf::Message::CopyConstruct<::chat::ChangeStatus>(arena, *from._impl_.change_);
      } else {
        _this->_impl_.change_->MergeFrom(*from._impl_.change_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.messagecommunication_ != nullptr);
      if (_this->_impl_.messagecommunication_ == nullptr) {
        _this->_impl_.messagecommunication_ =
            ::google::protobuf::Message::CopyConstruct<::chat::MessageCommunication>(arena, *from._impl_.messagecommunication_);
      } else {
        _this->_impl_.messagecommunication_->MergeFrom(*from._impl_.messagecommunication_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.option_ = from._impl_.option_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientPetition::CopyFrom(const ClientPetition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ClientPetition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientPetition::IsInitialized() const {
  return true;
}

void ClientPetition::InternalSwap(ClientPetition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.option_)
      + sizeof(ClientPetition::_impl_.option_)
      - PROTOBUF_FIELD_OFFSET(ClientPetition, _impl_.registration_)>(
          reinterpret_cast<char*>(&_impl_.registration_),
          reinterpret_cast<char*>(&other->_impl_.registration_));
}

::google::protobuf::Metadata ClientPetition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[6]);
}
// ===================================================================

class ServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._has_bits_);
};

ServerResponse::ServerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        servermessage_(arena, from.servermessage_) {}

ServerResponse::ServerResponse(
    ::google::protobuf::Arena* arena,
    const ServerResponse& from)
    : ::google::protobuf::Message(arena) {
  ServerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.connectedusers_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::chat::ConnectedUsersResponse>(
                              arena, *from._impl_.connectedusers_)
                        : nullptr;
  _impl_.messagecommunication_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::chat::MessageCommunication>(
                              arena, *from._impl_.messagecommunication_)
                        : nullptr;
  _impl_.userinforesponse_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::chat::UserInfo>(
                              arena, *from._impl_.userinforesponse_)
                        : nullptr;
  _impl_.change_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::chat::ChangeStatus>(
                              arena, *from._impl_.change_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, option_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, option_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, option_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:chat.ServerResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        servermessage_(arena) {}

inline void ServerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, connectedusers_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, connectedusers_) +
               sizeof(Impl_::code_));
}
ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:chat.ServerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.servermessage_.Destroy();
  delete _impl_.connectedusers_;
  delete _impl_.messagecommunication_;
  delete _impl_.userinforesponse_;
  delete _impl_.change_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ServerResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._cached_size_),
              false,
          },
          &ServerResponse::MergeImpl,
          &ServerResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ServerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.servermessage_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.connectedusers_ != nullptr);
      _impl_.connectedusers_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.messagecommunication_ != nullptr);
      _impl_.messagecommunication_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.userinforesponse_ != nullptr);
      _impl_.userinforesponse_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.change_ != nullptr);
      _impl_.change_->Clear();
    }
  }
  if (cached_has_bits & 0x00000060u) {
    ::memset(&_impl_.option_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.code_) -
        reinterpret_cast<char*>(&_impl_.option_)) + sizeof(_impl_.code_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 41, 2> ServerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::ServerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 option = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerResponse, _impl_.option_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.option_)}},
    // optional int32 code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerResponse, _impl_.code_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.code_)}},
    // optional string serverMessage = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.servermessage_)}},
    // optional .chat.ConnectedUsersResponse connectedUsers = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.connectedusers_)}},
    // optional .chat.MessageCommunication messageCommunication = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 1, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.messagecommunication_)}},
    // optional .chat.UserInfo userInfoResponse = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 2, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.userinforesponse_)}},
    // optional .chat.ChangeStatus change = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 3, PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.change_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 option = 1;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.option_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 code = 2;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.code_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string serverMessage = 3;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.servermessage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .chat.ConnectedUsersResponse connectedUsers = 4;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.connectedusers_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.MessageCommunication messageCommunication = 5;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.messagecommunication_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.UserInfo userInfoResponse = 6;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.userinforesponse_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chat.ChangeStatus change = 7;
    {PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.change_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::ConnectedUsersResponse>()},
    {::_pbi::TcParser::GetTable<::chat::MessageCommunication>()},
    {::_pbi::TcParser::GetTable<::chat::UserInfo>()},
    {::_pbi::TcParser::GetTable<::chat::ChangeStatus>()},
  }}, {{
    "\23\0\0\15\0\0\0\0"
    "chat.ServerResponse"
    "serverMessage"
  }},
};

::uint8_t* ServerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.ServerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 option = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_option(), target);
  }

  // optional int32 code = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_code(), target);
  }

  // optional string serverMessage = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_servermessage();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ServerResponse.serverMessage");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .chat.ConnectedUsersResponse connectedUsers = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.connectedusers_, _impl_.connectedusers_->GetCachedSize(), target, stream);
  }

  // optional .chat.MessageCommunication messageCommunication = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.messagecommunication_, _impl_.messagecommunication_->GetCachedSize(), target, stream);
  }

  // optional .chat.UserInfo userInfoResponse = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.userinforesponse_, _impl_.userinforesponse_->GetCachedSize(), target, stream);
  }

  // optional .chat.ChangeStatus change = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.change_, _impl_.change_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ServerResponse)
  return target;
}

::size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ServerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string serverMessage = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_servermessage());
    }

    // optional .chat.ConnectedUsersResponse connectedUsers = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.connectedusers_);
    }

    // optional .chat.MessageCommunication messageCommunication = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.messagecommunication_);
    }

    // optional .chat.UserInfo userInfoResponse = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.userinforesponse_);
    }

    // optional .chat.ChangeStatus change = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.change_);
    }

    // optional int32 option = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_option());
    }

    // optional int32 code = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_code());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ServerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerResponse*>(&to_msg);
  auto& from = static_cast<const ServerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.ServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_servermessage(from._internal_servermessage());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.connectedusers_ != nullptr);
      if (_this->_impl_.connectedusers_ == nullptr) {
        _this->_impl_.connectedusers_ =
            ::google::protobuf::Message::CopyConstruct<::chat::ConnectedUsersResponse>(arena, *from._impl_.connectedusers_);
      } else {
        _this->_impl_.connectedusers_->MergeFrom(*from._impl_.connectedusers_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.messagecommunication_ != nullptr);
      if (_this->_impl_.messagecommunication_ == nullptr) {
        _this->_impl_.messagecommunication_ =
            ::google::protobuf::Message::CopyConstruct<::chat::MessageCommunication>(arena, *from._impl_.messagecommunication_);
      } else {
        _this->_impl_.messagecommunication_->MergeFrom(*from._impl_.messagecommunication_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.userinforesponse_ != nullptr);
      if (_this->_impl_.userinforesponse_ == nullptr) {
        _this->_impl_.userinforesponse_ =
            ::google::protobuf::Message::CopyConstruct<::chat::UserInfo>(arena, *from._impl_.userinforesponse_);
      } else {
        _this->_impl_.userinforesponse_->MergeFrom(*from._impl_.userinforesponse_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.change_ != nullptr);
      if (_this->_impl_.change_ == nullptr) {
        _this->_impl_.change_ =
            ::google::protobuf::Message::CopyConstruct<::chat::ChangeStatus>(arena, *from._impl_.change_);
      } else {
        _this->_impl_.change_->MergeFrom(*from._impl_.change_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.option_ = from._impl_.option_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.code_ = from._impl_.code_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerResponse::IsInitialized() const {
  return true;
}

void ServerResponse::InternalSwap(ServerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.servermessage_, &other->_impl_.servermessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.code_)
      + sizeof(ServerResponse::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(ServerResponse, _impl_.connectedusers_)>(
          reinterpret_cast<char*>(&_impl_.connectedusers_),
          reinterpret_cast<char*>(&other->_impl_.connectedusers_));
}

::google::protobuf::Metadata ServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protocol_2eproto_getter,
                                   &descriptor_table_protocol_2eproto_once,
                                   file_level_metadata_protocol_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_protocol_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
